Terminals unused in grammar

   BOOLEAN
   STRING


State 40 conflicts: 2 shift/reduce
State 61 conflicts: 2 shift/reduce
State 62 conflicts: 2 shift/reduce


Grammar

    0 $accept: method_body $end

    1 method_body: statement_list

    2 statement_list: statement
    3               | statement_list statement

    4 statement: declaration
    5          | if
    6          | while
    7          | assignment
    8          | for

    9 declaration: primitive_type ID ';'

   10 primitive_type: INT
   11               | FLOAT

   12 $@1: %empty

   13 $@2: %empty

   14 $@3: %empty

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 statement '}'

   16 $@4: %empty

   17 while: WHILE '(' mark boolean_expression ')' '{' $@4 statement '}'

   18 mark: %empty

   19 $@5: %empty

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment ')' '{' $@5 statement '}'

   21 assignment: ID ASSIGN simple_expression ';'

   22 boolean_expression: TRUE
   23                   | FALSE
   24                   | simple_expression RELOP simple_expression
   25                   | boolean_expression AND_OPERATOR mark boolean_expression
   26                   | boolean_expression OR_OPERATOR mark boolean_expression
   27                   | NOT_OPERATOR boolean_expression

   28 simple_expression: term
   29                  | sign term
   30                  | simple_expression ADDOP term

   31 term: factor
   32     | term MULOP factor

   33 factor: ID
   34       | INT_VAL
   35       | FLOAT_VAL
   36       | '(' simple_expression ')'

   37 sign: ADDOP


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 17 20 36
')' (41) 15 17 20 36
';' (59) 9 20 21
'{' (123) 15 17 20
'}' (125) 15 17 20
error (256)
INT (258) 10
FLOAT (259) 11
BOOLEAN (260)
IF (261) 15
ELSE (262) 15
FOR (263) 20
WHILE (264) 17
TRUE (265) 22
FALSE (266) 23
INT_VAL (267) 34
FLOAT_VAL (268) 35
STRING (269)
ID (270) 9 21 33
ADDOP (271) 30 37
MULOP (272) 32
RELOP (273) 24
ASSIGN (274) 21
AND_OPERATOR (275) 25
OR_OPERATOR (276) 26
NOT_OPERATOR (277) 27


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
method_body (29)
    on left: 1, on right: 0
statement_list (30)
    on left: 2 3, on right: 1 3
statement (31)
    on left: 4 5 6 7 8, on right: 2 3 15 17 20
declaration (32)
    on left: 9, on right: 4
primitive_type (33)
    on left: 10 11, on right: 9
if (34)
    on left: 15, on right: 5
$@1 (35)
    on left: 12, on right: 15
$@2 (36)
    on left: 13, on right: 15
$@3 (37)
    on left: 14, on right: 15
while (38)
    on left: 17, on right: 6
$@4 (39)
    on left: 16, on right: 17
mark (40)
    on left: 18, on right: 17 20 25 26
for (41)
    on left: 20, on right: 8
$@5 (42)
    on left: 19, on right: 20
assignment (43)
    on left: 21, on right: 7 20
boolean_expression (44)
    on left: 22 23 24 25 26 27, on right: 15 17 20 25 26 27
simple_expression (45)
    on left: 28 29 30, on right: 21 24 30 36
term (46)
    on left: 31 32, on right: 28 29 30 32
factor (47)
    on left: 33 34 35 36, on right: 31 32
sign (48)
    on left: 37, on right: 29


State 0

    0 $accept: . method_body $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    IF     shift, and go to state 3
    FOR    shift, and go to state 4
    WHILE  shift, and go to state 5
    ID     shift, and go to state 6

    method_body     go to state 7
    statement_list  go to state 8
    statement       go to state 9
    declaration     go to state 10
    primitive_type  go to state 11
    if              go to state 12
    while           go to state 13
    for             go to state 14
    assignment      go to state 15


State 1

   10 primitive_type: INT .

    $default  reduce using rule 10 (primitive_type)


State 2

   11 primitive_type: FLOAT .

    $default  reduce using rule 11 (primitive_type)


State 3

   15 if: IF . '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 statement '}'

    '('  shift, and go to state 16


State 4

   20 for: FOR . '(' assignment mark boolean_expression ';' mark assignment ')' '{' $@5 statement '}'

    '('  shift, and go to state 17


State 5

   17 while: WHILE . '(' mark boolean_expression ')' '{' $@4 statement '}'

    '('  shift, and go to state 18


State 6

   21 assignment: ID . ASSIGN simple_expression ';'

    ASSIGN  shift, and go to state 19


State 7

    0 $accept: method_body . $end

    $end  shift, and go to state 20


State 8

    1 method_body: statement_list .
    3 statement_list: statement_list . statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    IF     shift, and go to state 3
    FOR    shift, and go to state 4
    WHILE  shift, and go to state 5
    ID     shift, and go to state 6

    $default  reduce using rule 1 (method_body)

    statement       go to state 21
    declaration     go to state 10
    primitive_type  go to state 11
    if              go to state 12
    while           go to state 13
    for             go to state 14
    assignment      go to state 15


State 9

    2 statement_list: statement .

    $default  reduce using rule 2 (statement_list)


State 10

    4 statement: declaration .

    $default  reduce using rule 4 (statement)


State 11

    9 declaration: primitive_type . ID ';'

    ID  shift, and go to state 22


State 12

    5 statement: if .

    $default  reduce using rule 5 (statement)


State 13

    6 statement: while .

    $default  reduce using rule 6 (statement)


State 14

    8 statement: for .

    $default  reduce using rule 8 (statement)


State 15

    7 statement: assignment .

    $default  reduce using rule 7 (statement)


State 16

   15 if: IF '(' . boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 statement '}'

    TRUE          shift, and go to state 23
    FALSE         shift, and go to state 24
    INT_VAL       shift, and go to state 25
    FLOAT_VAL     shift, and go to state 26
    ID            shift, and go to state 27
    ADDOP         shift, and go to state 28
    NOT_OPERATOR  shift, and go to state 29
    '('           shift, and go to state 30

    boolean_expression  go to state 31
    simple_expression   go to state 32
    term                go to state 33
    factor              go to state 34
    sign                go to state 35


State 17

   20 for: FOR '(' . assignment mark boolean_expression ';' mark assignment ')' '{' $@5 statement '}'

    ID  shift, and go to state 6

    assignment  go to state 36


State 18

   17 while: WHILE '(' . mark boolean_expression ')' '{' $@4 statement '}'

    $default  reduce using rule 18 (mark)

    mark  go to state 37


State 19

   21 assignment: ID ASSIGN . simple_expression ';'

    INT_VAL    shift, and go to state 25
    FLOAT_VAL  shift, and go to state 26
    ID         shift, and go to state 27
    ADDOP      shift, and go to state 28
    '('        shift, and go to state 30

    simple_expression  go to state 38
    term               go to state 33
    factor             go to state 34
    sign               go to state 35


State 20

    0 $accept: method_body $end .

    $default  accept


State 21

    3 statement_list: statement_list statement .

    $default  reduce using rule 3 (statement_list)


State 22

    9 declaration: primitive_type ID . ';'

    ';'  shift, and go to state 39


State 23

   22 boolean_expression: TRUE .

    $default  reduce using rule 22 (boolean_expression)


State 24

   23 boolean_expression: FALSE .

    $default  reduce using rule 23 (boolean_expression)


State 25

   34 factor: INT_VAL .

    $default  reduce using rule 34 (factor)


State 26

   35 factor: FLOAT_VAL .

    $default  reduce using rule 35 (factor)


State 27

   33 factor: ID .

    $default  reduce using rule 33 (factor)


State 28

   37 sign: ADDOP .

    $default  reduce using rule 37 (sign)


State 29

   27 boolean_expression: NOT_OPERATOR . boolean_expression

    TRUE          shift, and go to state 23
    FALSE         shift, and go to state 24
    INT_VAL       shift, and go to state 25
    FLOAT_VAL     shift, and go to state 26
    ID            shift, and go to state 27
    ADDOP         shift, and go to state 28
    NOT_OPERATOR  shift, and go to state 29
    '('           shift, and go to state 30

    boolean_expression  go to state 40
    simple_expression   go to state 32
    term                go to state 33
    factor              go to state 34
    sign                go to state 35


State 30

   36 factor: '(' . simple_expression ')'

    INT_VAL    shift, and go to state 25
    FLOAT_VAL  shift, and go to state 26
    ID         shift, and go to state 27
    ADDOP      shift, and go to state 28
    '('        shift, and go to state 30

    simple_expression  go to state 41
    term               go to state 33
    factor             go to state 34
    sign               go to state 35


State 31

   15 if: IF '(' boolean_expression . ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 statement '}'
   25 boolean_expression: boolean_expression . AND_OPERATOR mark boolean_expression
   26                   | boolean_expression . OR_OPERATOR mark boolean_expression

    AND_OPERATOR  shift, and go to state 42
    OR_OPERATOR   shift, and go to state 43
    ')'           shift, and go to state 44


State 32

   24 boolean_expression: simple_expression . RELOP simple_expression
   30 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 45
    RELOP  shift, and go to state 46


State 33

   28 simple_expression: term .
   32 term: term . MULOP factor

    MULOP  shift, and go to state 47

    $default  reduce using rule 28 (simple_expression)


State 34

   31 term: factor .

    $default  reduce using rule 31 (term)


State 35

   29 simple_expression: sign . term

    INT_VAL    shift, and go to state 25
    FLOAT_VAL  shift, and go to state 26
    ID         shift, and go to state 27
    '('        shift, and go to state 30

    term    go to state 48
    factor  go to state 34


State 36

   20 for: FOR '(' assignment . mark boolean_expression ';' mark assignment ')' '{' $@5 statement '}'

    $default  reduce using rule 18 (mark)

    mark  go to state 49


State 37

   17 while: WHILE '(' mark . boolean_expression ')' '{' $@4 statement '}'

    TRUE          shift, and go to state 23
    FALSE         shift, and go to state 24
    INT_VAL       shift, and go to state 25
    FLOAT_VAL     shift, and go to state 26
    ID            shift, and go to state 27
    ADDOP         shift, and go to state 28
    NOT_OPERATOR  shift, and go to state 29
    '('           shift, and go to state 30

    boolean_expression  go to state 50
    simple_expression   go to state 32
    term                go to state 33
    factor              go to state 34
    sign                go to state 35


State 38

   21 assignment: ID ASSIGN simple_expression . ';'
   30 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 45
    ';'    shift, and go to state 51


State 39

    9 declaration: primitive_type ID ';' .

    $default  reduce using rule 9 (declaration)


State 40

   25 boolean_expression: boolean_expression . AND_OPERATOR mark boolean_expression
   26                   | boolean_expression . OR_OPERATOR mark boolean_expression
   27                   | NOT_OPERATOR boolean_expression .

    AND_OPERATOR  shift, and go to state 42
    OR_OPERATOR   shift, and go to state 43

    AND_OPERATOR  [reduce using rule 27 (boolean_expression)]
    OR_OPERATOR   [reduce using rule 27 (boolean_expression)]
    $default      reduce using rule 27 (boolean_expression)


State 41

   30 simple_expression: simple_expression . ADDOP term
   36 factor: '(' simple_expression . ')'

    ADDOP  shift, and go to state 45
    ')'    shift, and go to state 52


State 42

   25 boolean_expression: boolean_expression AND_OPERATOR . mark boolean_expression

    $default  reduce using rule 18 (mark)

    mark  go to state 53


State 43

   26 boolean_expression: boolean_expression OR_OPERATOR . mark boolean_expression

    $default  reduce using rule 18 (mark)

    mark  go to state 54


State 44

   15 if: IF '(' boolean_expression ')' . '{' $@1 statement $@2 '}' ELSE '{' $@3 statement '}'

    '{'  shift, and go to state 55


State 45

   30 simple_expression: simple_expression ADDOP . term

    INT_VAL    shift, and go to state 25
    FLOAT_VAL  shift, and go to state 26
    ID         shift, and go to state 27
    '('        shift, and go to state 30

    term    go to state 56
    factor  go to state 34


State 46

   24 boolean_expression: simple_expression RELOP . simple_expression

    INT_VAL    shift, and go to state 25
    FLOAT_VAL  shift, and go to state 26
    ID         shift, and go to state 27
    ADDOP      shift, and go to state 28
    '('        shift, and go to state 30

    simple_expression  go to state 57
    term               go to state 33
    factor             go to state 34
    sign               go to state 35


State 47

   32 term: term MULOP . factor

    INT_VAL    shift, and go to state 25
    FLOAT_VAL  shift, and go to state 26
    ID         shift, and go to state 27
    '('        shift, and go to state 30

    factor  go to state 58


State 48

   29 simple_expression: sign term .
   32 term: term . MULOP factor

    MULOP  shift, and go to state 47

    $default  reduce using rule 29 (simple_expression)


State 49

   20 for: FOR '(' assignment mark . boolean_expression ';' mark assignment ')' '{' $@5 statement '}'

    TRUE          shift, and go to state 23
    FALSE         shift, and go to state 24
    INT_VAL       shift, and go to state 25
    FLOAT_VAL     shift, and go to state 26
    ID            shift, and go to state 27
    ADDOP         shift, and go to state 28
    NOT_OPERATOR  shift, and go to state 29
    '('           shift, and go to state 30

    boolean_expression  go to state 59
    simple_expression   go to state 32
    term                go to state 33
    factor              go to state 34
    sign                go to state 35


State 50

   17 while: WHILE '(' mark boolean_expression . ')' '{' $@4 statement '}'
   25 boolean_expression: boolean_expression . AND_OPERATOR mark boolean_expression
   26                   | boolean_expression . OR_OPERATOR mark boolean_expression

    AND_OPERATOR  shift, and go to state 42
    OR_OPERATOR   shift, and go to state 43
    ')'           shift, and go to state 60


State 51

   21 assignment: ID ASSIGN simple_expression ';' .

    $default  reduce using rule 21 (assignment)


State 52

   36 factor: '(' simple_expression ')' .

    $default  reduce using rule 36 (factor)


State 53

   25 boolean_expression: boolean_expression AND_OPERATOR mark . boolean_expression

    TRUE          shift, and go to state 23
    FALSE         shift, and go to state 24
    INT_VAL       shift, and go to state 25
    FLOAT_VAL     shift, and go to state 26
    ID            shift, and go to state 27
    ADDOP         shift, and go to state 28
    NOT_OPERATOR  shift, and go to state 29
    '('           shift, and go to state 30

    boolean_expression  go to state 61
    simple_expression   go to state 32
    term                go to state 33
    factor              go to state 34
    sign                go to state 35


State 54

   26 boolean_expression: boolean_expression OR_OPERATOR mark . boolean_expression

    TRUE          shift, and go to state 23
    FALSE         shift, and go to state 24
    INT_VAL       shift, and go to state 25
    FLOAT_VAL     shift, and go to state 26
    ID            shift, and go to state 27
    ADDOP         shift, and go to state 28
    NOT_OPERATOR  shift, and go to state 29
    '('           shift, and go to state 30

    boolean_expression  go to state 62
    simple_expression   go to state 32
    term                go to state 33
    factor              go to state 34
    sign                go to state 35


State 55

   15 if: IF '(' boolean_expression ')' '{' . $@1 statement $@2 '}' ELSE '{' $@3 statement '}'

    $default  reduce using rule 12 ($@1)

    $@1  go to state 63


State 56

   30 simple_expression: simple_expression ADDOP term .
   32 term: term . MULOP factor

    MULOP  shift, and go to state 47

    $default  reduce using rule 30 (simple_expression)


State 57

   24 boolean_expression: simple_expression RELOP simple_expression .
   30 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 45

    $default  reduce using rule 24 (boolean_expression)


State 58

   32 term: term MULOP factor .

    $default  reduce using rule 32 (term)


State 59

   20 for: FOR '(' assignment mark boolean_expression . ';' mark assignment ')' '{' $@5 statement '}'
   25 boolean_expression: boolean_expression . AND_OPERATOR mark boolean_expression
   26                   | boolean_expression . OR_OPERATOR mark boolean_expression

    AND_OPERATOR  shift, and go to state 42
    OR_OPERATOR   shift, and go to state 43
    ';'           shift, and go to state 64


State 60

   17 while: WHILE '(' mark boolean_expression ')' . '{' $@4 statement '}'

    '{'  shift, and go to state 65


State 61

   25 boolean_expression: boolean_expression . AND_OPERATOR mark boolean_expression
   25                   | boolean_expression AND_OPERATOR mark boolean_expression .
   26                   | boolean_expression . OR_OPERATOR mark boolean_expression

    AND_OPERATOR  shift, and go to state 42
    OR_OPERATOR   shift, and go to state 43

    AND_OPERATOR  [reduce using rule 25 (boolean_expression)]
    OR_OPERATOR   [reduce using rule 25 (boolean_expression)]
    $default      reduce using rule 25 (boolean_expression)


State 62

   25 boolean_expression: boolean_expression . AND_OPERATOR mark boolean_expression
   26                   | boolean_expression . OR_OPERATOR mark boolean_expression
   26                   | boolean_expression OR_OPERATOR mark boolean_expression .

    AND_OPERATOR  shift, and go to state 42
    OR_OPERATOR   shift, and go to state 43

    AND_OPERATOR  [reduce using rule 26 (boolean_expression)]
    OR_OPERATOR   [reduce using rule 26 (boolean_expression)]
    $default      reduce using rule 26 (boolean_expression)


State 63

   15 if: IF '(' boolean_expression ')' '{' $@1 . statement $@2 '}' ELSE '{' $@3 statement '}'

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    IF     shift, and go to state 3
    FOR    shift, and go to state 4
    WHILE  shift, and go to state 5
    ID     shift, and go to state 6

    statement       go to state 66
    declaration     go to state 10
    primitive_type  go to state 11
    if              go to state 12
    while           go to state 13
    for             go to state 14
    assignment      go to state 15


State 64

   20 for: FOR '(' assignment mark boolean_expression ';' . mark assignment ')' '{' $@5 statement '}'

    $default  reduce using rule 18 (mark)

    mark  go to state 67


State 65

   17 while: WHILE '(' mark boolean_expression ')' '{' . $@4 statement '}'

    $default  reduce using rule 16 ($@4)

    $@4  go to state 68


State 66

   15 if: IF '(' boolean_expression ')' '{' $@1 statement . $@2 '}' ELSE '{' $@3 statement '}'

    $default  reduce using rule 13 ($@2)

    $@2  go to state 69


State 67

   20 for: FOR '(' assignment mark boolean_expression ';' mark . assignment ')' '{' $@5 statement '}'

    ID  shift, and go to state 6

    assignment  go to state 70


State 68

   17 while: WHILE '(' mark boolean_expression ')' '{' $@4 . statement '}'

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    IF     shift, and go to state 3
    FOR    shift, and go to state 4
    WHILE  shift, and go to state 5
    ID     shift, and go to state 6

    statement       go to state 71
    declaration     go to state 10
    primitive_type  go to state 11
    if              go to state 12
    while           go to state 13
    for             go to state 14
    assignment      go to state 15


State 69

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 . '}' ELSE '{' $@3 statement '}'

    '}'  shift, and go to state 72


State 70

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment . ')' '{' $@5 statement '}'

    ')'  shift, and go to state 73


State 71

   17 while: WHILE '(' mark boolean_expression ')' '{' $@4 statement . '}'

    '}'  shift, and go to state 74


State 72

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' . ELSE '{' $@3 statement '}'

    ELSE  shift, and go to state 75


State 73

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment ')' . '{' $@5 statement '}'

    '{'  shift, and go to state 76


State 74

   17 while: WHILE '(' mark boolean_expression ')' '{' $@4 statement '}' .

    $default  reduce using rule 17 (while)


State 75

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE . '{' $@3 statement '}'

    '{'  shift, and go to state 77


State 76

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment ')' '{' . $@5 statement '}'

    $default  reduce using rule 19 ($@5)

    $@5  go to state 78


State 77

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' . $@3 statement '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 79


State 78

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment ')' '{' $@5 . statement '}'

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    IF     shift, and go to state 3
    FOR    shift, and go to state 4
    WHILE  shift, and go to state 5
    ID     shift, and go to state 6

    statement       go to state 80
    declaration     go to state 10
    primitive_type  go to state 11
    if              go to state 12
    while           go to state 13
    for             go to state 14
    assignment      go to state 15


State 79

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 . statement '}'

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    IF     shift, and go to state 3
    FOR    shift, and go to state 4
    WHILE  shift, and go to state 5
    ID     shift, and go to state 6

    statement       go to state 81
    declaration     go to state 10
    primitive_type  go to state 11
    if              go to state 12
    while           go to state 13
    for             go to state 14
    assignment      go to state 15


State 80

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment ')' '{' $@5 statement . '}'

    '}'  shift, and go to state 82


State 81

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 statement . '}'

    '}'  shift, and go to state 83


State 82

   20 for: FOR '(' assignment mark boolean_expression ';' mark assignment ')' '{' $@5 statement '}' .

    $default  reduce using rule 20 (for)


State 83

   15 if: IF '(' boolean_expression ')' '{' $@1 statement $@2 '}' ELSE '{' $@3 statement '}' .

    $default  reduce using rule 15 (if)
